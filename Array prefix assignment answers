1. Equilibrium Index Element : https://www.interviewbit.com/problems/balance-array/
public class Solution {
    public int solve(ArrayList<Integer> A) {
        int left_odd = 0;
    int left_even = 0;
    int right_odd = 0;
    int right_even = 0;
    for(int i = 0; i < A.size(); ++i)
    {
        if( i % 2 == 0)
        {
            right_even += A.get(i);
        }
        else
        {
            right_odd += A.get(i);
        }
    }
    int count = 0;
    for(int i = 0; i < A.size(); ++i)
    {
        if(i % 2 == 0)
        {
            right_even -= A.get(i);
            if(left_odd + right_even == left_even + right_odd)
            {
                ++count;
            }
            left_even += A.get(i);
        }
        else
        {
            right_odd -= A.get(i);
            if(left_odd + right_even == left_even + right_odd)
            {
                ++count;
            }
            left_odd += A.get(i);
        }
    }
    return count;
    }
}

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2.. Pick from both sides!:    https://www.interviewbit.com/problems/pick-from-both-sides/


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

303. Range Sum Query - Immutable : https://leetcode.com/problems/range-sum-query-immutable/'

class NumArray {
int prefix[];
    public NumArray(int[] nums) {
      prefix=new int[nums.length];
      prefix[0]=nums[0];
      for(int i=1;i<nums.length;i++){
          prefix[i]=prefix[i-1]+nums[i];
      }  
    }
    
    public int sumRange(int left, int right) {
         if(left == 0) return prefix[right];
        return prefix[right]-prefix[left-1];
    }
}

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
